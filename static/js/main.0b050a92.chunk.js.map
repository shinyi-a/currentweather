{"version":3,"sources":["Pages/Home.js","components/ResultContainer.js","Pages/Result.js","components/Nav.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","country","setCountry","loadCountry","setLoadCountry","inputText","setInputText","getCountry","a","axios","get","res","data","console","error","useEffect","className","onChange","e","target","value","map","index","name","to","ResultContainer","temp","cloud","uv","humidity","text","icon","wind","src","alt","Result","result","setResult","loading","setLoading","city","useParams","getData","location","current","temp_c","condition","wind_kph","Nav","Footer","copyright","Date","getFullYear","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b050a92.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  const [country, setCountry] = useState([]); //get all countries API\n  const [loadCountry, setLoadCountry] = useState(true); //check if API call is completed\n  const [inputText, setInputText] = useState(\"\"); //set user selected country\n\n  //call for list of countries API\n  const getCountry = async () => {\n    try {\n      const res = await axios.get(\"https://travelbriefing.org/countries.json\");\n      setCountry(res.data);\n      setLoadCountry(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //only call countries API once\n  useEffect(() => {\n    getCountry();\n  }, []);\n\n  //set user selected country on change\n  const handleChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"home\">\n        <h1 className=\"cursornone\">Select for current weather</h1>\n        <br />\n        {loadCountry ? (\n          <h2>loading...</h2>\n        ) : (\n          <select className=\"dropdown\" onChange={handleChange}>\n            <option value=\"0\">Please select country</option>\n            {country.map((value, index) => {\n              return (\n                <option key={index} value={value.name}>\n                  {value.name}\n                </option>\n              );\n            })}\n          </select>\n        )}\n        <br />\n        <Link to={`/currentweather/${inputText}`}>\n          <button className=\"search\">search</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ResultContainer = ({\n  country,\n  temp,\n  cloud,\n  uv,\n  humidity,\n  text,\n  icon,\n  wind,\n}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"result\">\n        <img src={icon} alt={text} />\n        <h1>{country}</h1>\n        <h2>{text}</h2>\n        <br />\n        <h2 className=\"nobold\">temperature: {temp}°C</h2>\n        <h2 className=\"nobold\">cloud: {cloud}%</h2>\n        <h2 className=\"nobold\">uv index: {uv}</h2>\n        <h2 className=\"nobold\">humidity: {humidity}%</h2>\n        <h2 className=\"nobold\">wind speed: {wind}kph</h2>\n        <br />\n      </div>\n      <Link to=\"/currentweather\">\n        <button className=\"gohome\">go home</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default ResultContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ResultContainer from \"../components/ResultContainer\";\n\nconst Result = () => {\n  const [result, setResult] = useState(\"\"); //get weather result from user selected country\n  const [loading, setLoading] = useState(true); //check if weather API call is completed\n\n  let { city } = useParams();\n\n  //call for selected country API\n  const getData = async (city) => {\n    try {\n      const res = await axios.get(\n        `https://api.weatherapi.com/v1/current.json?key=aa0ba9a997824d67ae1111340211711&q=${city}`\n      );\n      setResult(res.data);\n      setLoading(false);\n    } catch (error) {}\n  };\n\n  //only call waether API once\n  useEffect(() => {\n    getData(city);\n  }, [city]);\n\n  return (\n    <div>\n      {loading ? (\n        <div className=\"loading\">\n          <h1>loading...</h1>\n        </div>\n      ) : (\n        <>\n          <ResultContainer\n            country={result.location.country}\n            temp={result.current.temp_c}\n            cloud={result.current.cloud}\n            uv={result.current.uv}\n            humidity={result.current.humidity}\n            text={result.current.condition.text}\n            icon={result.current.condition.icon}\n            wind={result.current.condition.wind_kph}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <div className=\"nav\">\n      <h1>\n        <Link to=\"/currentweather\">\n          <h3>Current Weather App</h3>\n        </Link>\n      </h1>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nexport default function Footer() {\n  let copyright =\n    \"Copyright © \" + new Date().getFullYear() + \", Current Weather App\";\n  return (\n    <>\n      <footer className=\"cursornone\">{copyright}</footer>\n    </>\n  );\n}\n","import \"./index.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Result from \"./Pages/Result\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <Routes>\n        <Route path=\"/currentweather\" element={<Home />} />\n        <Route path=\"/currentweather/:city\" element={<Result />} />\n      </Routes>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}